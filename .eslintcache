[{"C:\\Users\\RITIKA\\Documents\\slack\\src\\index.js":"1","C:\\Users\\RITIKA\\Documents\\slack\\src\\App.js":"2","C:\\Users\\RITIKA\\Documents\\slack\\src\\reportWebVitals.js":"3","C:\\Users\\RITIKA\\Documents\\slack\\src\\firebase\\firebase.js":"4","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\auth\\register.js":"5","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\auth\\login.js":"6","C:\\Users\\RITIKA\\Documents\\slack\\src\\home.js":"7","C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\ActionCreater.js":"8","C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\reducer.js":"9","C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\ActionTypes.js":"10","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\SideBar.component.jsx":"11","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\UserInfo\\userInfo.Component.jsx":"12","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\channels.component.jsx":"13"},{"size":478,"mtime":1609782305774,"results":"14","hashOfConfig":"15"},{"size":1781,"mtime":1609782296437,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":694,"mtime":1609529603343,"results":"18","hashOfConfig":"15"},{"size":3326,"mtime":1609530112363,"results":"19","hashOfConfig":"15"},{"size":1774,"mtime":1609589833220,"results":"20","hashOfConfig":"15"},{"size":745,"mtime":1609783094321,"results":"21","hashOfConfig":"15"},{"size":205,"mtime":1609595234520,"results":"22","hashOfConfig":"15"},{"size":407,"mtime":1609538025951,"results":"23","hashOfConfig":"15"},{"size":35,"mtime":1609535773884,"results":"24","hashOfConfig":"15"},{"size":365,"mtime":1609783079125,"results":"25","hashOfConfig":"15"},{"size":1766,"mtime":1609782370633,"results":"26","hashOfConfig":"15"},{"size":2497,"mtime":1609783049145,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lo6epe",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\RITIKA\\Documents\\slack\\src\\index.js",[],["61","62"],"C:\\Users\\RITIKA\\Documents\\slack\\src\\App.js",["63","64"],"import React,{useEffect} from \"react\";\nimport Login from \"./components/auth/register\"\nimport {Link,Route,BrowserRouter as Router,Switch,withRouter} from \"react-router-dom\"\nimport LoginForm from \"./components/auth/login\";\nimport {connect,Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport firebase from \"./firebase/firebase\"\nimport Home from \"./home\";\nimport {combinereducers} from \"./store/reducer\";\nimport {setUser} from \"./store/ActionCreater\"\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combinereducers,  composeEnhancers(applyMiddleware(thunk)));\n\nconst Index = (props) => {\n\n  \n\n  useEffect( () => {\n    firebase.auth().onAuthStateChanged( (user) =>{\n      if(user){\n        props.history.push(\"/home\")\n        console.log(\"useeffecttttttttttttttttttttttt\",user);\n        props.setUser(user)    \n       \n        \n        \n      }else{\n        props.setUser(null);\n        props.history.push(\"/login\")\n      }\n    } )\n  },[] )\n\n  setTimeout( () => {console.log(\"Innnnn Reduxxxxxxx\",props.red)} )\n  \n\n\nreturn( <>\n<Switch>\n     \n      <Route  exact path = \"/home\" component = {Home} />\n       <Route exact path = \"/\" component = {Login} />\n       <Route exact path = \"/login\" component = {LoginForm} />\n      \n        </Switch> </>)\n        \n\n}\n\nconst mapStateToProps = (state) => {\n\n  console.log(\"mapstatetoprosss\",state.user)\n\n  return { red :  state.user }\n}\n\n\n const IndexWithRouter = withRouter(connect(mapStateToProps,{setUser})(Index))\n\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n        <Provider store={store}>\n        <IndexWithRouter />\n        </Provider>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\RITIKA\\Documents\\slack\\src\\reportWebVitals.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\firebase\\firebase.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\auth\\register.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\auth\\login.js",["65"],"import React,{useState} from 'react'\r\nimport firebase from \"../../firebase/firebase\"\r\nimport {Link,Redirect,withRouter} from \"react-router-dom\"\r\nconst LoginForm = (props)  => {\r\n\r\n    const [values,setValues] = useState({\r\n        name : \"\",\r\n        email : \"\",\r\n        password : \"\",\r\n        confirmPassword : \"\",\r\n        error : null,\r\n        errorMessage : \"\"\r\n    })\r\n\r\n    const {email,password,error,errorMessage} = values\r\n\r\n    const handleChange = (e) => {\r\n           const name = e.target.name;\r\n           setValues({\r\n               ...values,\r\n               [name] : e.target.value\r\n           })\r\n    }\r\n\r\n    const clicked = (e) => { e.preventDefault() \r\n   \r\n   \r\n            firebase.auth().signInWithEmailAndPassword(email,password).then( user => { \r\n            return props.history.push(\"/home\") }\r\n            ) \r\n            .catch(err => {setValues({...values,error : true, errorMessage : err.message})});\r\n            \r\n      \r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={clicked}>\r\n         \r\n            <input\r\n             value = {email}\r\n             placeholder = \"email\" \r\n             name = \"email\" \r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n                value = {password}\r\n                placeholder = \"password\" \r\n                name = \"password\" \r\n                 onChange={handleChange}\r\n                 required\r\n            />\r\n            <button>submit</button>\r\n            \r\n            </form>\r\n            { error && (<h1>{errorMessage} </h1>)   }\r\n            {JSON.stringify(values)}\r\n\r\n            <p>Register <span><Link to =\"/\" > Register  </Link></span>    </p>  \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  withRouter(LoginForm);\r\n","C:\\Users\\RITIKA\\Documents\\slack\\src\\home.js",["66","67","68","69"],"import React from 'react'\r\nimport firebase from \"./firebase/firebase\"\r\nimport Channels from \"./components/Sidebar/channels.component.jsx\"\r\nimport { Menu,Grid } from 'semantic-ui-react';\r\nimport {connect} from \"react-redux\"\r\nimport {SideBar} from \"./components/Sidebar/SideBar.component.jsx\"\r\nimport \"./app.css\"\r\nfunction Home(props) {\r\n    return (\r\n        <Grid columns=\"equal\">\r\n          <SideBar />\r\n         \r\n        </Grid>\r\n    \r\n      );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n{/* <h1>This is home component   <span>  </span> </h1>  \r\n<Channels /> \r\n<button onClick = { () => {firebase.auth().signOut().then( () => {console.log(\"User logged out\")}  )}   }> Logout</button> */}","C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\ActionCreater.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\reducer.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\store\\ActionTypes.js",[],"C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\SideBar.component.jsx",["70"],"import React from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport \"./SideBar.css\"\r\nimport UserInfo from \"./UserInfo/userInfo.Component.jsx\"\r\nimport Channels from \"./channels.component.jsx\" \r\n\r\nexport const SideBar = () => {\r\n    return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\"> \r\n     <UserInfo />\r\n    </Menu>\r\n    )\r\n}","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\UserInfo\\userInfo.Component.jsx",["71","72"],"import React from 'react';\r\nimport { Grid, Header, Icon, Image, Dropdown } from 'semantic-ui-react';\r\nimport { connect } from \"react-redux\";\r\nimport firebase from '../../../firebase/firebase';\r\nimport \"./userInfo.css\";\r\n\r\nconst UserInfo = (props) => {\r\n\r\n\r\n    const getDropDownOptions = () => {\r\n        return [{\r\n            key: 'signout',\r\n            text: <span onClick={signOut} >Sign Out</span>\r\n        }]\r\n    }\r\n\r\n    const signOut = () => {\r\n        firebase.auth()\r\n            .signOut()\r\n            .then(() => console.log(\"user signed out\"));\r\n    }\r\n\r\n    if (props.user) {\r\n        console.log( \"userInfo\", \"calledddddddddddddd\");\r\n        return (<Grid>\r\n            <Grid.Column>\r\n                <Grid.Row className=\"userinfo_grid_row\">\r\n                    <Header inverted as=\"h2\">\r\n                        <Icon name=\"slack\" />\r\n                        <Header.Content>Slack</Header.Content>\r\n                    </Header>\r\n                    <Header className=\"userinfo_displayname\" inverted as=\"h4\">\r\n                        <Dropdown\r\n                            trigger={\r\n                                <span>\r\n                                    {props.user.displayName}\r\n                                </span>\r\n                            }\r\n                           \r\n                        >\r\n                        </Dropdown>\r\n                            <button onClick = {signOut}>Signout</button>\r\n                    </Header>\r\n                </Grid.Row>\r\n            </Grid.Column>\r\n        </Grid>)\r\n    }\r\n    console.log(\"called in userrInfoooooo\")\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserInfo);","C:\\Users\\RITIKA\\Documents\\slack\\src\\components\\Sidebar\\channels.component.jsx",["73","74","75","76"],"import React,{useState,useEffect} from 'react'\r\nimport firebase from \"../../firebase/firebase\";\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction Channels(props) {\r\n\r\n   \r\n    const [values,setValues] = useState({\r\n        name : \"\" ,\r\n        description : \"\"\r\n    })\r\n\r\n    const [channel,setChannel] = useState([])\r\n    const {name,description,channelss} = values\r\n\r\n    const channelsRef = firebase.database().ref(\"channels\");\r\n\r\n    let c = []\r\n\r\n    useEffect( () =>  {\r\n\r\n        channelsRef.on('child_added',(snap) => {\r\n            setChannel( (currentState) => {\r\n                let updateState = [...currentState]\r\n                updateState.push(snap.val());\r\n                return updateState;\r\n            }  )\r\n            \r\n        } )\r\n        \r\n\r\n       },[]  )\r\n\r\n       \r\n\r\n    const handleClick = () => {\r\n        if(name && description){\r\n            const key = channelsRef.push().key;\r\n\r\n            const channel = {\r\n                id : key,\r\n                name : name,\r\n                description : description,\r\n                createdBy : {\r\n                    name : props.user.displayName\r\n                }\r\n            }\r\n\r\n            channelsRef.child(key).\r\n            update(channel)\r\n            .then( () => {\r\n                setValues({name : \"\" , description : \"\"})\r\n            }  )\r\n            .catch(err => {console.log(err)})\r\n\r\n        \r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const showChannel =() => {\r\n        const length = channel.length\r\n        if(channel.length === length){\r\n             channel.map((item) => {\r\n            return <p>{item.name}</p>    \r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <h1>We add Channels here</h1> \r\n           <input name = \"name\" placeholder = \"Add Channel Name here\" onChange = {handleChange} value = {name} />\r\n           <input  name = \"description\" placeholder = \"Add Description here\" onChange = {handleChange} value = {description} />\r\n           <br></br>\r\n           <button  onClick = {handleClick}>Save channel</button>\r\n           <br></br>\r\n            {JSON.stringify(values)}\r\n            \r\n            {showChannel()}\r\n            \r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            user : state.user\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Channels)\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":33,"column":5,"nodeType":"87","endLine":33,"endColumn":7,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":3,"column":14,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"90","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"91","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"92","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":23,"column":1,"nodeType":"95","messageId":"96","endLine":25,"endColumn":127},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":16},{"ruleId":"81","severity":1,"message":"97","line":2,"column":30,"nodeType":"83","messageId":"84","endLine":2,"endColumn":35},{"ruleId":"81","severity":1,"message":"98","line":10,"column":11,"nodeType":"83","messageId":"84","endLine":10,"endColumn":29},{"ruleId":"81","severity":1,"message":"99","line":14,"column":29,"nodeType":"83","messageId":"84","endLine":14,"endColumn":38},{"ruleId":"81","severity":1,"message":"100","line":18,"column":9,"nodeType":"83","messageId":"84","endLine":18,"endColumn":10},{"ruleId":"85","severity":1,"message":"101","line":32,"column":10,"nodeType":"87","endLine":32,"endColumn":12,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":49,"column":35,"nodeType":"105","messageId":"106","endLine":49,"endColumn":36,"fix":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["110"],"'Redirect' is defined but never used.","'firebase' is defined but never used.","'Channels' is defined but never used.","'Menu' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Image' is defined but never used.","'getDropDownOptions' is assigned a value but never used.","'channelss' is assigned a value but never used.","'c' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'channelsRef'. Either include it or remove the dependency array.",["111"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"112","text":"113"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},[1198,1213],"\r\n            .","Update the dependencies array to be: [props]",{"range":"118","text":"119"},"Update the dependencies array to be: [channelsRef]",{"range":"120","text":"121"},[1067,1069],"[props]",[776,778],"[channelsRef]"]